{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///ddh.min.js","webpack:///webpack/bootstrap c7e99ffb99f529868421?c6a7","webpack:///./src/index.js","webpack:///./src/table/table.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","./src/index.js","./src/table/table.js","_toConsumableArray","arr","Array","isArray","i","arr2","length","from","IS_UPGRADED","SKE_TABLE_SUMMARY_ROW","SKE_TABLE_TOGGLE","SkeTable","element","element_","init","window","prototype","_this","addRowGroupRole","rowGroups","querySelectorAll","push","apply","forEach","el","setAttribute","addThRole","concat","th","rows","upgradeRows_","classList","add","clickHandler_","event","preventDefault","target","toggle","_this2","addTdRole","td","addTrRole","tr","contains","hasAttribute","hasSummaryRows","querySelector","removeEventListener","addEventListener","bind","getRowGroups","gr","a","getAttribute","toLowerCase","removeAttribute","filter","summaryRow","getSummaryRow","upgradeTable","groupRow","previousElementSibling","result","r","nextElementSibling","_this3","toggleRow","closest","expand","rowsToToggle","row","mdlDowngrade_","componentHandler","register","constructor","classAsString","cssClass","widget","0"],"mappings":"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","file":"ddh.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ddh\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ddh\"] = factory();\n\telse\n\t\troot[\"ddh\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ddh\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ddh\"] = factory();\n\telse\n\t\troot[\"ddh\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ \"./src/index.js\":\n/*!**********************!*\\\n  !*** ./src/index.js ***!\n  \\**********************/\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(/*! table/table */ \"./src/table/table.js\");\n\n/***/ },\n\n/***/ \"./src/table/table.js\":\n/*!****************************!*\\\n  !*** ./src/table/table.js ***!\n  \\****************************/\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\t\n\t(function () {\n\t  'use strict';\n\t\n\t  var IS_UPGRADED = 'is-upgraded';\n\t  var SKE_TABLE_SUMMARY_ROW = 'ske-table__summary-row';\n\t  var SKE_TABLE_TOGGLE = 'ske-table-toggle';\n\t\n\t  /**\n\t   * https://github.com/google/material-design-lite/issues/4205\n\t   * @constructor\n\t   * @param {Element} element The element that will be upgraded.\n\t   */\n\t  var SkeTable = function SkeTable(element) {\n\t    // Stores the element.\n\t    this.element_ = element;\n\t\n\t    // Initialize instance.\n\t    this.init();\n\t  };\n\t  window['SkeTable'] = SkeTable;\n\t\n\t  /**\n\t   * Initialize component\n\t   */\n\t  SkeTable.prototype.init = function () {\n\t    var _this = this;\n\t\n\t    var addRowGroupRole = function addRowGroupRole() {\n\t      var rowGroups = [].concat(_toConsumableArray(_this.element_.querySelectorAll('tbody')));\n\t      rowGroups.push.apply(rowGroups, _toConsumableArray(_this.element_.querySelectorAll('thead')));\n\t      rowGroups.push.apply(rowGroups, _toConsumableArray(_this.element_.querySelectorAll('tfoot')));\n\t\n\t      rowGroups.forEach(function (el) {\n\t        return el.setAttribute('role', 'rowgroup');\n\t      });\n\t    };\n\t\n\t    var addThRole = function addThRole() {\n\t      [].concat(_toConsumableArray(_this.element_.querySelectorAll('th'))).forEach(function (th) {\n\t        th.setAttribute('role', 'columnheader');\n\t      });\n\t    };\n\t\n\t    if (this.element_) {\n\t      // Do the init required for this component to work\n\t      this.element_.setAttribute('role', 'table');\n\t      addRowGroupRole();\n\t      addThRole();\n\t\n\t      var rows = [].concat(_toConsumableArray(this.element_.querySelectorAll('tr')));\n\t\n\t      this.upgradeRows_(rows);\n\t\n\t      // Set upgraded flag\n\t      this.element_.classList.add(IS_UPGRADED);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Handles custom command event, 'open', 'close', 'toggle' or upgrade\n\t   * @param event. A custom event\n\t   * @private\n\t   */\n\t  SkeTable.prototype.clickHandler_ = function (event) {\n\t    event.preventDefault();\n\t    //event.stopPropagation();\n\t\n\t    if (event.target) {\n\t      this.toggle(event.target);\n\t    }\n\t  };\n\t\n\t  SkeTable.prototype.upgradeRows_ = function (rows) {\n\t    var _this2 = this;\n\t\n\t    var addTdRole = function addTdRole(el) {\n\t      [].concat(_toConsumableArray(el.querySelectorAll('td'))).forEach(function (td) {\n\t        return td.setAttribute('role', 'cell');\n\t      });\n\t    };\n\t\n\t    var addTrRole = function addTrRole(tr) {\n\t      tr.setAttribute('role', 'row');\n\t      if (tr.classList.contains(SKE_TABLE_SUMMARY_ROW) && !tr.hasAttribute('aria-expanded')) {\n\t        tr.setAttribute('aria-expanded', 'false');\n\t      }\n\t\n\t      addTdRole(tr);\n\t    };\n\t\n\t    var hasSummaryRows = this.element_.querySelector('tbody > .' + SKE_TABLE_SUMMARY_ROW) !== null;\n\t\n\t    rows.forEach(function (tr) {\n\t      // Summary rows\n\t      if (tr.classList.contains(SKE_TABLE_SUMMARY_ROW)) {\n\t        var toggle = tr.querySelector('.' + SKE_TABLE_TOGGLE);\n\t        if (toggle) {\n\t          toggle.removeEventListener('click', _this2.clickHandler_);\n\t          toggle.addEventListener('click', _this2.clickHandler_.bind(_this2));\n\t        }\n\t\n\t        var rowGroups = _this2.getRowGroups(tr);\n\t        rowGroups.forEach(function (gr) {\n\t          if (!gr.classList.contains(IS_UPGRADED)) {\n\t            var a = tr.getAttribute('aria-expanded');\n\t            if (a && a.toLowerCase() === 'true') {\n\t              gr.setAttribute('aria-hidden', 'false');\n\t              gr.removeAttribute('hidden');\n\t            } else {\n\t              gr.setAttribute('aria-hidden', 'true');\n\t              gr.setAttribute('hidden', '');\n\t            }\n\t\n\t            gr.classList.add(IS_UPGRADED);\n\t          }\n\t\n\t          addTrRole(gr);\n\t        });\n\t\n\t        tr.classList.add(IS_UPGRADED);\n\t      } else if (!hasSummaryRows) {\n\t        tr.classList.add(IS_UPGRADED);\n\t      }\n\t      addTrRole(tr);\n\t    });\n\t\n\t    // Remaining not upgraded rows\n\t    if (hasSummaryRows) {\n\t      rows.filter(function (tr) {\n\t        return !tr.classList.contains(IS_UPGRADED);\n\t      }).forEach(function (tr) {\n\t        var summaryRow = _this2.getSummaryRow(tr);\n\t\n\t        if (summaryRow) {\n\t          var a = summaryRow.getAttribute('aria-expanded');\n\t          if (a && a.toLowerCase() === 'true') {\n\t            tr.setAttribute('aria-hidden', 'false');\n\t            tr.removeAttribute('hidden');\n\t          } else {\n\t            tr.setAttribute('aria-hidden', 'true');\n\t            tr.setAttribute('hidden', '');\n\t          }\n\t        }\n\t\n\t        tr.classList.add(IS_UPGRADED);\n\t      });\n\t    }\n\t  };\n\t\n\t  // Public methods\n\t\n\t  SkeTable.prototype.upgradeTable = function () {\n\t    this.upgradeRows_([].concat(_toConsumableArray(this.element_.querySelectorAll('tbody > tr:not(.' + IS_UPGRADED + ')'))));\n\t  };\n\t  SkeTable.prototype['upgradeTable'] = SkeTable.prototype.upgradeTable;\n\t\n\t  /**\n\t   *\n\t   * @param groupRow\n\t   * @returns {*|Element}\n\t     */\n\t  SkeTable.prototype.getSummaryRow = function (groupRow) {\n\t    var tr = groupRow.previousElementSibling;\n\t    while (tr) {\n\t      if (tr.classList.contains(SKE_TABLE_SUMMARY_ROW)) {\n\t        break;\n\t      }\n\t      tr = tr.previousElementSibling;\n\t    }\n\t    return tr;\n\t  };\n\t  SkeTable.prototype['getSummaryRow'] = SkeTable.prototype.getSummaryRow;\n\t\n\t  /**\n\t   *\n\t   * @param summaryRow\n\t   * @returns {Array}\n\t     */\n\t  SkeTable.prototype.getRowGroups = function (summaryRow) {\n\t    var result = [];\n\t    var r = summaryRow.nextElementSibling;\n\t    while (r) {\n\t      if (r.classList.contains(SKE_TABLE_SUMMARY_ROW)) {\n\t        r = null;\n\t      } else {\n\t        result.push(r);\n\t        r = r.nextElementSibling;\n\t      }\n\t    }\n\t    return result;\n\t  };\n\t  SkeTable.prototype['getRowGroups'] = SkeTable.prototype.getRowGroups;\n\t\n\t  /**\n\t   * Execute toggle\n\t   * @param target\n\t   * */\n\t  SkeTable.prototype.toggle = function (target) {\n\t    var _this3 = this;\n\t\n\t    var toggleRow = target.closest('.' + SKE_TABLE_SUMMARY_ROW);\n\t\n\t    if (toggleRow) {\n\t      (function () {\n\t        var expand = false;\n\t        var a = toggleRow.getAttribute('aria-expanded');\n\t        if (a && a.toLowerCase() === 'true') {\n\t          toggleRow.setAttribute('aria-expanded', 'false');\n\t        } else {\n\t          toggleRow.setAttribute('aria-expanded', 'true');\n\t          expand = true;\n\t        }\n\t\n\t        var rowsToToggle = _this3.getRowGroups(toggleRow);\n\t        [].concat(_toConsumableArray(rowsToToggle)).forEach(function (row) {\n\t          if (expand) {\n\t            row.removeAttribute('hidden');\n\t            row.setAttribute('aria-hidden', 'false');\n\t          } else {\n\t            row.setAttribute('hidden', '');\n\t            row.setAttribute('aria-hidden', 'true');\n\t          }\n\t        });\n\t      })();\n\t    }\n\t  };\n\t  SkeTable.prototype['toggle'] = SkeTable.prototype.toggle;\n\t\n\t  /**\n\t   * Downgrade component\n\t   * E.g remove listeners and clean up resources\n\t   */\n\t  SkeTable.prototype.mdlDowngrade_ = function () {};\n\t\n\t  // The component registers itself. It can assume componentHandler is available\n\t  // in the global scope.\n\t  /* eslint no-undef: 0 */\n\t  /* jshint undef:false */\n\t  componentHandler.register({\n\t    constructor: SkeTable,\n\t    classAsString: 'SkeTable',\n\t    cssClass: 'ske-js-table',\n\t    widget: true\n\t  });\n\t})();\n\n/***/ },\n\n/***/ 0:\n/*!*****************!*\\\n  !*** multi ddh ***!\n  \\*****************/\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(/*! /home/m86862/projects/ddh-komponenter/src/index.js */\"./src/index.js\");\n\n\n/***/ }\n\n/******/ })\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** ddh.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap c7e99ffb99f529868421\n **/","import 'table/table';\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","(function() {\n  'use strict';\n\n  const IS_UPGRADED = 'is-upgraded';\n  const SKE_TABLE_SUMMARY_ROW = 'ske-table__summary-row';\n  const SKE_TABLE_TOGGLE = 'ske-table-toggle';\n\n  /**\n   * https://github.com/google/material-design-lite/issues/4205\n   * @constructor\n   * @param {Element} element The element that will be upgraded.\n   */\n  const SkeTable = function SkeTable(element) {\n    // Stores the element.\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['SkeTable'] = SkeTable;\n\n  /**\n   * Initialize component\n   */\n  SkeTable.prototype.init = function() {\n    const addRowGroupRole = () => {\n      const rowGroups = [...this.element_.querySelectorAll('tbody')];\n      rowGroups.push(...this.element_.querySelectorAll('thead'));\n      rowGroups.push(...this.element_.querySelectorAll('tfoot'));\n\n      rowGroups.forEach(el => el.setAttribute('role', 'rowgroup'));\n    };\n\n    const addThRole = () => {\n      [...this.element_.querySelectorAll( 'th')].forEach(th => {\n        th.setAttribute('role', 'columnheader');\n      });\n    };\n\n    if (this.element_) {\n      // Do the init required for this component to work\n      this.element_.setAttribute('role', 'table');\n      addRowGroupRole();\n      addThRole();\n\n      const rows = [...this.element_.querySelectorAll('tr')];\n\n      this.upgradeRows_(rows);\n\n      // Set upgraded flag\n      this.element_.classList.add(IS_UPGRADED);\n    }\n  };\n\n  /**\n   * Handles custom command event, 'open', 'close', 'toggle' or upgrade\n   * @param event. A custom event\n   * @private\n   */\n  SkeTable.prototype.clickHandler_ = function( event ) {\n    event.preventDefault();\n    //event.stopPropagation();\n\n    if(event.target) { this.toggle(event.target); }\n  };\n\n  SkeTable.prototype.upgradeRows_ = function(rows) {\n\n    const addTdRole = (el) => {\n      [...el.querySelectorAll( 'td')].forEach(td => td.setAttribute('role', 'cell'));\n    };\n\n    const addTrRole = (tr) => {\n      tr.setAttribute('role', 'row');\n      if(tr.classList.contains(SKE_TABLE_SUMMARY_ROW) && !tr.hasAttribute('aria-expanded')){\n        tr.setAttribute('aria-expanded', 'false');\n      }\n\n      addTdRole(tr);\n    };\n\n    const hasSummaryRows = this.element_.querySelector(`tbody > .${SKE_TABLE_SUMMARY_ROW}`) !== null;\n\n    rows.forEach(tr => {\n      // Summary rows\n      if (tr.classList.contains(SKE_TABLE_SUMMARY_ROW)) {\n        const toggle = tr.querySelector(`.${SKE_TABLE_TOGGLE}`);\n        if (toggle) {\n          toggle.removeEventListener('click', this.clickHandler_);\n          toggle.addEventListener('click', this.clickHandler_.bind(this));\n        }\n\n        const rowGroups = this.getRowGroups(tr);\n        rowGroups.forEach(gr => {\n          if (!gr.classList.contains(IS_UPGRADED)) {\n            const a = tr.getAttribute('aria-expanded');\n            if (a && a.toLowerCase() === 'true') {\n              gr.setAttribute('aria-hidden', 'false');\n              gr.removeAttribute('hidden');\n            }\n\n            else {\n              gr.setAttribute('aria-hidden', 'true');\n              gr.setAttribute('hidden', '');\n            }\n\n            gr.classList.add(IS_UPGRADED);\n          }\n\n          addTrRole(gr);\n        });\n\n        tr.classList.add(IS_UPGRADED);\n      }\n      else if (!hasSummaryRows) {\n        tr.classList.add(IS_UPGRADED);\n      }\n      addTrRole(tr);\n    });\n\n\n    // Remaining not upgraded rows\n    if (hasSummaryRows) {\n      rows\n        .filter(tr => !tr.classList.contains(IS_UPGRADED))\n        .forEach(tr => {\n          const summaryRow = this.getSummaryRow(tr);\n\n          if(summaryRow) {\n            const a = summaryRow.getAttribute('aria-expanded');\n            if (a && a.toLowerCase() === 'true') {\n              tr.setAttribute('aria-hidden', 'false');\n              tr.removeAttribute('hidden');\n            }\n\n            else {\n              tr.setAttribute('aria-hidden', 'true');\n              tr.setAttribute('hidden', '');\n            }\n          }\n\n          tr.classList.add(IS_UPGRADED);\n        });\n    }\n  };\n\n  // Public methods\n\n  SkeTable.prototype.upgradeTable = function() {\n    this.upgradeRows_([...this.element_.querySelectorAll(`tbody > tr:not(.${IS_UPGRADED})` )]);\n  };\n  SkeTable.prototype['upgradeTable'] = SkeTable.prototype.upgradeTable;\n\n  /**\n   *\n   * @param groupRow\n   * @returns {*|Element}\n     */\n  SkeTable.prototype.getSummaryRow = function( groupRow ) {\n    let tr = groupRow.previousElementSibling;\n    while(tr) {\n      if(tr.classList.contains(SKE_TABLE_SUMMARY_ROW)) {\n        break;\n      }\n      tr = tr.previousElementSibling;\n    }\n    return tr;\n  };\n  SkeTable.prototype['getSummaryRow'] = SkeTable.prototype.getSummaryRow;\n\n  /**\n   *\n   * @param summaryRow\n   * @returns {Array}\n     */\n  SkeTable.prototype.getRowGroups = function( summaryRow ) {\n    const result = [];\n    let r = summaryRow.nextElementSibling;\n    while(r) {\n      if(r.classList.contains(SKE_TABLE_SUMMARY_ROW)) {\n        r = null;\n      }\n      else {\n        result.push(r);\n        r = r.nextElementSibling;\n      }\n    }\n    return result;\n  };\n  SkeTable.prototype['getRowGroups'] = SkeTable.prototype.getRowGroups;\n\n  /**\n   * Execute toggle\n   * @param target\n   * */\n  SkeTable.prototype.toggle = function( target ) {\n    const toggleRow = target.closest(`.${SKE_TABLE_SUMMARY_ROW}`);\n\n    if(toggleRow) {\n      let expand = false;\n      const a = toggleRow.getAttribute('aria-expanded');\n      if (a && a.toLowerCase() === 'true') {\n        toggleRow.setAttribute('aria-expanded', 'false');\n      }\n      else {\n        toggleRow.setAttribute('aria-expanded', 'true');\n        expand = true;\n      }\n\n      const rowsToToggle = this.getRowGroups(toggleRow);\n      [...rowsToToggle].forEach(row => {\n        if (expand) {\n          row.removeAttribute('hidden');\n          row.setAttribute('aria-hidden', 'false');\n        }\n        else {\n          row.setAttribute('hidden', '');\n          row.setAttribute('aria-hidden', 'true');\n        }\n      });\n    }\n  };\n  SkeTable.prototype['toggle'] = SkeTable.prototype.toggle;\n\n  /**\n   * Downgrade component\n   * E.g remove listeners and clean up resources\n   */\n  SkeTable.prototype.mdlDowngrade_ = function() {\n    'use strict';\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  /* eslint no-undef: 0 */\n  /* jshint undef:false */\n  componentHandler.register({\n    constructor: SkeTable,\n    classAsString: 'SkeTable',\n    cssClass: 'ske-js-table',\n    widget: true\n  });\n})();\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/table/table.js\n **/"],"sourceRoot":""}